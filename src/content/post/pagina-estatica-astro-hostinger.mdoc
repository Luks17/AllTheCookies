---
authors: ["luks"]
title: Minha Experi√™ncia utilizando Hostinger para esta p√°gina
description: Neste artigo eu vou relatar como foi minha experi√™ncia para hostear minha p√°gina est√°tica, feita com AstroJS, na hostinger.
thumbnail: {
  img: "@/assets/posts/pagina-estatica-astro-hostinger/thumb.jpg",
  alt: Hostinger mais astro d√° certo?
}
publishDate: 2023-08-27T21:59:00Z
category: blog
tags: ["web", "astrojs", "review"]
draft: false
minutesRead: 5
edited: false
---

## Introdu√ß√£o

Na reta final da constru√ß√£o desta p√°gina eu comecei a considerar as op√ß√µes que tinha para finalmente colocar meu site - que estava trabalhando faz tanto tempo - no ar.

Uma das op√ß√µes mais famosas foi a Hostinger e, a primeira vista, aparantava ter tudo o que eu queria: pre√ßo bom, dom√≠nio gratuito por 1 ano, email com o dom√≠nio, SSL ilimitado, largura de banda ilimitada, etc.

No entanto, ap√≥s uma pesquisa no discord do **AstroJS**, o gerador de p√°ginas est√°ticas que uso, vi que eles n√£o recomendam a Hostinger pois n√£o √© t√£o simples como outros servi√ßos que h√° l√° na gringa, como Vercel, Netlify, etc. 

Esses servi√ßos t√™m suporte espec√≠fico para Astro e fazem *Deployment* Autom√°tico ap√≥s todo commit no Github. Essa *feature* √© algo que eu queria muito, mas como essas empresas n√£o atuam no Brasil fica muito caro os pre√ßos de seus servi√ßos.

Logo, decidi ir com a Hostinger e fazer ela funcionar do jeito que eu queria. Neste artigo irei relatar os perrengues at√© eu conseguir isso.

{% aside type="danger" title="Isto n√£o √© um tutorial!" %}
Este √© um artigo descritivo em que eu s√≥ vou relatar o que passei e tive que fazer para alcan√ßar meus objetivos, n√£o tomei todo o cuidado que tomaria em tutoriais para garantir uma did√°tica boa.

Al√©m disso, as coisas apresentadas neste artigo podem mudar e n√£o serem mais v√°lidas para quando voc√™ estiver lendo.

Sabendo disso, espero que este artigo seja √∫til para algu√©m no futuro tentando fazer as mesmas coisas que eu fiz.
{% /aside %}

## Colocando a p√°gina no ar

Primeiro de tudo foi necess√°rio resgatar meu dom√≠nio gratuito que veio com o plano, fiz isso imediatamente. Ap√≥s isso, percebi que no painel da Hostinger tinha uma op√ß√£o para integrar com o Git.

No entanto, n√£o √© bem o que eu esperava. A Hostinger aparentemente tem como p√∫blico alvo quem usa PHP ou Wordpress, logo ao conectar meu reposit√≥rio ela imediatamente tentou rodar o Composer. Como precisava de Node para buildar e dar deploy no meu site, a op√ß√£o do Git do painel foi descartada.

Como s√≥ estava ansioso para ver logo minha p√°gina no ar, decidi abrir o gerenciador de arquivos deles e jogar diretamente minha p√°gina, j√° buildada, no diret√≥rio `public_html`. Por√©m, esperei, esperei e esperei e nada! Logo, decidi contatar o suporte.

Fui respondido rapidamente e foram bem atenciosos com minhas d√∫vidas. Aparentemente, faltava apontar um registro DNS para meu dom√≠nio e, com isso resolvido, fui no [DNS Propagation Checker](#links-externos) para ver ele se propagando!

Ap√≥s um tempo, meu site finalmente estava no ar!

## SSL

Ele estava no ar como HTTP... sem o S! Felizmente, antes de come√ßar a suar frio, vi que n√£o fui enganado e era s√≥ instalar meu certificado SSL gratuito no painel! Agora sim, estava usando HTTPS!

## Deploy Autom√°tico

Ficar buildando localmente meu site e atualizando os arquivos na m√£o no painel da Hostinger iria ficar insuport√°vel eventualmente. Logo, decidi buscar solu√ß√µes para isso.

Ao olhar o painel, vi que poderia usar FTP para enviar os arquivos, ou seja, poderia substituir os arquivos atualizados, apagar os que n√£o s√£o mais necess√°rios e colocar arquivos novos automaticamente! Perfeito, agora s√≥ precisava de alguma solu√ß√£o para buildar meu site com Node e envi√°-lo via FTP.

Encontrei muitas op√ß√µes boas mas pagas para isso, logo acabei tendo que aprender e usar Github Actions. Basicamente, com elas √© poss√≠vel subir um container para automatizar coisas do seu projeto, exatamente o que eu precisava!

Elas s√£o declaradas com um arquivo YAML onde √© poss√≠vel definir tudo o que voc√™ quiser. O Github prov√™ algumas Actions j√° pr√©-feitas, por√©m nenhuma me serviria perfeitamente, precisei escrever a minha eu mesmo:

```yaml
name: Build and Deploy

on:
  push:
	branches:
  	- main

jobs:
  build:
	runs-on: ubuntu-latest
	environment: Production

	steps:
  	- name: üöö Get latest code
    	uses: actions/checkout@v3

  	- name: Use Node.js 16
    	uses: actions/setup-node@v2
    	with:
      	node-version: "16"

  	- name: Install Dependencies
    	run: npm install

  	- name: Build
    	run: npm run build

  	- name: üìÇ Sync files
    	uses: SamKirkland/FTP-Deploy-Action@v4.3.4
    	with:
      	server: ${{ secrets.ftp_server }}
      	username: ${{ secrets.ftp_username }}
      	password: ${{ secrets.ftp_password }}
      	local-dir: ./dist/
      	server-dir: ./
```

Basicamente, neste c√≥digo defino uma a√ß√£o chamada "Build and Deploy" que √© chamada sempre que ocorre um `push` em `main`. Ele roda no `environment` "Production", que √© um ambiente que eu pr√© defini nas configura√ß√µes do meu reposit√≥rio para guardar alguns *secrets* (vari√°veis de ambiente sens√≠veis).

A *action* puxa o c√≥digo mais recente do meu reposit√≥rio, ap√≥s isso instala Node 16, instala as depend√™ncias do meu projeto (Astro e suas integra√ß√µes), builda ele e envia a o resultado via FTP para a Hostinger.

## Cache

Uma das coisas mais importantes para conseguir um *score* bom no **Google Lighthouse** √© uma pol√≠tica de cache longa para coisas que n√£o mudam frequentemente na sua p√°gina, como imagens, v√≠deos, fontes, etc.

A Hostinger oferece um gerenciamento de cache no painel de controle, por√©m seu intervalo de tempo padr√£o √© muito curto, logo o Lighthouse continua reclamando mesmo com ele ativo. No entanto, descobri uma forma de aumentar isso seguindo um [tutorial deles](#links-externos).

Em *web servers* que usam `Apache` √© poss√≠vel fazer configura√ß√µes complexas de forma simples utilizando um arquivo oculto chamado .htaccess. Como a hostinger aparentemente usa `Apache`, eu fiz o seguinte arquivo `.htaccess`:

```apache
<IfModule mod_expires.c>
  ExpiresActive On

 # Fonts
  ExpiresByType font/ttf "access plus 1 year"
  ExpiresByType font/otf "access plus 1 year"
  ExpiresByType font/woff "access plus 1 year"
  ExpiresByType font/woff2 "access plus 1 year"
  ExpiresByType application/font-woff "access plus 1 year"

 # Images
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"
</IfModule>
ErrorDocument 404 /404.html
```

Basicamente, neste arquivo estou falando para toda imagem e fonte ser armazenada no cache dos *browsers* por pelo menos 1 ano. Como n√£o tenho v√≠deos na minha p√°gina, e nem planejo ter, n√£o coloquei nada a respeito disso.

A √∫ltima linha eu coloquei pois a Hostinger n√£o estava usando minha p√°gina para o erro 404, mas sim uma p√°gina gen√©rica deles. Essa linha resolve isso.

## Conclus√£o

Apesar de ter tido que pesquisar muito e aprender algumas coisas, fiquei muito satisfeito que tudo que queria fazer deu certo. Talvez se tivesse sido f√°cil o sentimento bom de tudo ter dado certo n√£o seria t√£o grande.

Eu recomendaria a Hostinger? Sim, n√£o tive nenhum problema grave e consegui fazer tudo o que eu queria. Como disse anteriormente, p√°ginas constru√≠das com Node n√£o s√£o o foco deles, visto que o suporte deles √© melhor para Wordpress e PHP. Apesar disso, isso n√£o foi problem√°tico para mim em nenhum momento.

No entanto, **isso vale apenas para p√°ginas est√°ticas**, caso quisesse fazer uma p√°gina com `Server-side Rendering`, que o AstroJS tamb√©m suporta, provavelmente n√£o conseguiria faz√™-la funcionar na Hostinger **com o plano que comprei**.

### Links Externos

- [DNS Propagation Checker](https://www.whatsmydns.net/)
- [Tutorial da hostinger](https://www.hostinger.com/tutorials/website/improving-website-performance-leveraging-browser-cache)
