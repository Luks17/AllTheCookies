---
authors: ["luks"]
title: Simulando uma SPA com a View Transitions API e Astro
description: A View Transition API permite simular uma SPA em seu MPA! Neste artigo eu falo um pouco sobre como ela funciona e como a usei com AstroJS.
thumbnail: {
  img: "@/assets/posts/astrojs-viewtransitions/thumb.jpg",
  alt: Tag da View Transitions em Astro
}
publishDate: 2023-09-06T22:31:00Z
category: blog
tags: ["astrojs", "web", "html/css"]
draft: false
minutesRead: 4
edited: false
---

## Introdu√ß√£o

Uma das coisas mais legais que est√° sendo desenvolvida para a web nos √∫ltimos tempos √© a **View Transitions API**. 
Ela permite a cria√ß√£o de anima√ß√µes de transi√ß√£o durante a navega√ß√£o entre p√°ginas, simulando o comportamento de 
uma *Single-Page Application* (SPA) em uma *Multi-Page Application* (MPA)! E isso **usando apenas CSS**!

Ela foi proposta pelo **W3C CSS Working Group** e hoje em dia j√° est√° sendo suportada pela 
[maior parte dos navegadores baseados em Chromium](#referencias) (nada do Firefox ainda infelizmente üôÅ).

Para minha sorte, o *framework* utilizado para construir esta p√°gina, **Astro em sua atualiza√ß√£o 3.0**, 
foi o primeiro a implementar uma solu√ß√£o para utilizar View Transitions com *fallback* para navegadores 
que n√£o a suportam ainda e com persist√™ncia de estado! 

Assim que terminei de implementar as coisas mais importantes desta p√°gina, j√° comecei a pesquisar como implementar essa *feature*. 
E o resultado? Navegue por esta p√°gina e descubra voc√™ mesmo! Neste artigo irei falar sobre o que tive que fazer para implement√°-la 
e tentar explicar sobre como ela funciona.

## Implementa√ß√£o b√°sica

{% aside type="danger" title="Isto n√£o √© um tutorial!" %}
Isto √© um artigo descritivo , n√£o tomei todo o cuidado que tomaria em tutoriais para garantir uma did√°tica boa.
{% /aside %}

Utilizando a [documenta√ß√£o oficial do Astro como refer√™ncia](#referencias), percebe-se que n√£o √© necess√°rio mudar muito para come√ßar a 
usar a *feature*. A √∫nica mudan√ßa que precisa ser feita √© colocar o componente `<ViewTransitions />` em uma `<head />` comum entre as p√°ginas do site.

Com isso, o Astro come√ßa a englobar o HTML principal com um pseudo elemento `::view-transition` sempre que voc√™ navegar entre suas rotas, 
realizando uma transi√ß√£o padr√£o com a anima√ß√£o definida por eles. Al√©m disso, ele tamb√©m j√° implementa o fallback para navegadores que n√£o 
suportem a feature ou para usu√°rios que prefiram movimenta√ß√£o reduzida nas p√°ginas.

No entanto, o primeiro problema d√° a sua cara imediatamente ap√≥s isso: o tema da p√°gina n√£o persiste quando navegamos nela! Isso deve-se ao 
fato do Astro executar o script, que busca a prefer√™ncia de tema do usu√°rio, apenas quando ele chega pela primeira vez na p√°gina, nunca 
executando-o novamente, nem mesmo quando ele navega pelas rotas.

Para resolver isso, podemos utilizar `astro:after-swap`, que √© um evento que o Astro lan√ßa imediatamente quando a nova p√°gina substitui a anterior. 
Logo, se o escutamos podemos executar nosso script de tema sempre que ele √© lan√ßado!

```typescript
<script>

import { setTemaPreferido } from "@/caminho/para/temas";

setTemaPreferido();

document.addEventListener("astro:after-swap", setTemaPreferido);

</script>
```

Apenas com isso, esta p√°gina j√° come√ßou a funcionar sem grandes problemas!

## Persistindo estados e transi√ß√µes de imagens

O Astro permite que se persista elementos entre p√°ginas. Logo, √© poss√≠vel fazer coisas incr√≠veis que seriam extremamente complexas em outros *frameworks*, 
como persistir um cron√¥metro entre p√°ginas sem atrapalhar sua contagem ou at√© continuar executando um v√≠deo de de uma p√°gina para a outra!

Isso √© poss√≠vel com a diretiva `transition:persist`, que pode at√© ser usada em componentes de outros frameworks como React! 

No entanto, voc√™ provavelmente clicou neste artigo para ver como eu implementei a anima√ß√£o de imagens na transi√ß√£o de p√°ginas e, realmente, 
isso √© provavelmente a parte mais interessante.

Para fazer isso, o Astro fornece uma diretiva chamada `transition:name=‚Äùnome‚Äù`, que basicamente implementa o estilo `view-transition-name` 
no seu elemento para voc√™. Basicamente, elementos com o mesmo `view-transition-name` de duas p√°ginas diferentes s√£o ‚Äúconectados‚Äù  e o navegador 
cria uma transi√ß√£o animada entre eles.

Por√©m, h√° uma limita√ß√£o para esse estilo: em um mesmo HTML, n√£o podem existir dois ou mais elementos com o mesmo `view-transition-name`. 
Isso pois o navegador n√£o tem como saber qual deles deve ser animado na troca de p√°ginas. 

## Como isso funciona?

Imagine um *Card* que cont√©m a *thumbnail* de um artigo na p√°gina A e um *Hero* na p√°gina B com uma vers√£o da imagem com melhor qualidade e maior. 
Quando o usu√°rio navega de A para B, o navegador ir√° calcular as diferen√ßas entre a *thumbnail* do *Card* e o *Hero* e criar estados intermedi√°rios para 
dar a ilus√£o de anima√ß√£o.

Um [artigo em ingl√™s de Dave Rupert](#referencias) utilizou como exemplo uma imagem que achei sensacional para explicar isso:

![Animorphs como exemplo para View Transitions](../../assets/posts/astrojs-viewtransitions/animorphs.jpg)

Ap√≥s ver isso, n√£o irei mais elaborar sobre o assunto.

## Problemas

Apesar de ser uma adi√ß√£o incr√≠vel √† web, as View Transitions do Astro introduzem uma complexidade a mais para as MPAs por causa da persist√™ncia de 
estados e execu√ß√£o √∫nica de scripts que executavam m√∫ltiplas vezes antes. Ademais, por ainda ser uma feature nova nos navegadores, h√° uma alta 
possibilidade de ocorr√™ncia de bugs.

Al√©m disso, ap√≥s implement√°-las na p√°gina, sempre que quiser fazer algo novo preciso testar tudo duas vezes: uma em um navegador que 
suporte a feature e outra em algum que n√£o o suporte (isso sem contar ter que fazer o mesmo para o mobile!).

No entanto, apesar de tudo isso, eu acredito que vale completamente o esfor√ßo, pois deixa a p√°gina muito mais viva e din√¢mica!

{% anchor name="referencias" / %}
### Refer√™ncias

- [Suporte da View Transitions API](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API#browser_compatibility)
- [Documenta√ß√£o sobre View Transitions do astro](https://docs.astro.build/en/guides/view-transitions/)
- [Artigo de Dave Rupert](https://daverupert.com/2023/05/getting-started-view-transitions/)
