---
import "@/styles/base.css";

import { getImage } from "astro:assets";

import type { MetaTags as Props } from "@/types/Meta";

import Layout from "./BaseLayout.astro";
import Header from "@/components/base/Header.astro";
import Sidebar from "@/components/base/Sidebar";
import Footer from "@/components/base/Footer.astro";
import Search from "@/components/segments/Search";
import background from "@/assets/bg.png";

import { getUnsortedPosts } from "@/util/posts-utils";

const meta = Astro.props;

const optimizedBg = await getImage({ src: background });

const postsToSearch = (await getUnsortedPosts()).map((post) => post.data);
---

<Layout {...meta}>
  <!-- 
    client:media only loads the component JS when a css condition is met 
    client:only renders component only in client (no static content)
  -->
  <Header />
  <Sidebar client:media="(max-width: 1024px)" />
  <Search elementsToSearch={postsToSearch} client:only="react" />

  <!-- overflow-x-clip is needed so absolute elements don't make the horizontal scrollbar appear -->
  <main class="relative min-h-screen overflow-x-clip">
    <div
      style={`background-image: url('${optimizedBg.src}')`}
      class="left-0 top-0 absolute h-full w-full -z-50 background-opacity rotate-1 bg-contain"
    >
    </div>
    <div class="mx-auto max-w-7xl pb-10 px-10">
      <slot />
    </div>
  </main>

  <Footer />

  <script>
    import { setPreferredTheme } from "@/resources/stores/theme-store";
    import { openSearch } from "@/resources/stores/nav-store";

    const query = new URLSearchParams(window.location.search).get("q");

    if (query !== null) openSearch();

    setPreferredTheme();
  </script>
</Layout>
