---
import { Clock } from "@/resources/static/Icons";

import { postsCategories } from "@/resources/static/links";
import type { PostFrontmatter } from "@/types/Posts";
import { extractAuthorsFromPost } from "@/util/authors";
import { getFormatedDate } from "@/util/date";
import { getSlug } from "@/util/common";
import { Image } from "astro:assets";

export interface Props {
  post: PostFrontmatter;
}

const { post } = Astro.props;

const thumb = post.thumbnail;

const categorySlug = post.category;
const category = postsCategories.find(
  (sublink) => sublink.slug === categorySlug
)!.name;

const authors = await extractAuthorsFromPost(post);
---

<div
  class="max-w-3xl mx-auto flex flex-col text-skin-base py-2 border-y-2 border-secondary bg-crust my-7 rounded-xl"
>
  {
    post.edited && (
      <span class="text-skin-accent text-[0.6rem] opacity-90 w-full text-right px-4">
        Editado
      </span>
    )
  }
  <p
    class="flex justify-center w-full text-skin-subtext text-xs sm:text-sm gap-3 pt-1.5"
  >
    <span class="flex items-center gap-1"
      ><Clock />{post.minutesRead} minutos de leitura</span
    >
    <span class="flex items-center">Â·</span>
    <span class="flex items-center"
      >{`${getFormatedDate(post.publishDate)}`}</span
    >
  </p>

  <!-- title -->
  <h1
    class="text-3xl sm:text-4xl lg:text-5xl w-full text-center py-4 px-2 md:py-5 font-bold text-skin-base"
  >
    {post.title}
  </h1>

  <!-- thumb with category -->
  <div class="mx-4 rounded-xl border-2 border-crust flex justify-center">
    <a
      href={`/posts/${categorySlug}`}
      class="absolute w-fit mx-auto p-2 rounded-b-lg capitalize bg-crust font-bold text-xs sm:text-sm text-skin-accent-secondary opacity-90 hover:opacity-100 transition-opacity z-10"
      >{category}</a
    >
    <Image src={thumb.img} alt={thumb.alt} loading="eager" transition:name={`post-img-${getSlug(post.title)}`} />
  </div>

  <!-- authors -->
  <div class="border-l-2 mt-4 ml-5 mb-2 border-secondary">
    <div class="pl-2 text-xs">
      <p class="text-skin-subtext mb-2">Escrito por:</p>
      <ul class="flex items-center gap-2">
        {
          authors.map((author) => {
            const authorSlug = getSlug(author.name)
            return (
              <li class="w-fit">
                <a href={`/authors/${authorSlug}`}>
                  <Image
                    src={author.image}
                    alt={thumb.alt}
                    class="rounded-full w-14 hover:scale-105 transition-transform ease-in-out duration-300"
                    width={84}
                    height={84}
                    loading="lazy"
                    decoding="async"
                    transition:name={`author-img-${authorSlug}`}
                  />
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</div>
